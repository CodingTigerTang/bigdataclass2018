[
["dashboards.html", "6 Dashboards 6.1 Basic structure 6.2 Dropdown data 6.3 Update dashboard items 6.4 Integrate the input", " 6 Dashboards 6.1 Basic structure Preview a simple shinydashboard Create and preview a simple shinydashboard library(shinydashboard) library(shiny) library(DT) ui &lt;- dashboardPage( dashboardHeader(title = &quot;Quick Example&quot;), dashboardSidebar(selectInput(&quot;select&quot;, &quot;Selection&quot;, c(&quot;one&quot;, &quot;two&quot;))), dashboardBody( valueBoxOutput(&quot;total&quot;), tableOutput(&quot;monthly&quot;) ) ) server &lt;- function(input, output) { output$monthly &lt;- renderTable(head(mtcars)) output$total &lt;- renderValueBox(valueBox(100, subtitle = &quot;Flights&quot;)) } shinyApp(ui, server) 6.2 Dropdown data Review a technique to populate a dropdown Use purrr to create a list with the correct structure for the shiny dropdown airline_list &lt;- carriers %&gt;% filter(carrier %in% c(&quot;UA&quot;, &quot;DL&quot;)) %&gt;% select(carrier, carriername) %&gt;% # In case more fields are added collect() %&gt;% # All would be collected anyway split(.$carriername) %&gt;% # Create a list item for each name map(~.$carrier) # Add the carrier code to each item head(airline_list) ## $`Delta Air Lines Inc. (1960 - )` ## [1] &quot;DL&quot; ## ## $`United Air Lines Inc. (1960 - )` ## [1] &quot;UA&quot; In the app code, replace c(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;) with airline_list # Goes from this: dashboardSidebar(selectInput(&quot;select&quot;, &quot;Selection&quot;, c(&quot;one&quot;, &quot;two&quot;))), # To this: dashboardSidebar(selectInput(&quot;select&quot;, &quot;Selection&quot;, airline_list)), Re-run the app 6.3 Update dashboard items Create base query for the dashboard using dplyr and pass the results to the dashboard Save the base “query” to a variable. It will contain a carrier selection base_dashboard &lt;- flights %&gt;% filter(uniquecarrier == &quot;DL&quot;) head(base_dashboard) ## # Source: lazy query [?? x 29] ## # Database: PostgreSQL 9.3.20[rstudio_dev@localhost/postgres] ## year month dayof… dayo… dept… crsd… arrt… crsa… uniq… flig… tail… actu… ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2008 7.00 2.00 3.00 1641 1640 2012 2002 DL 79.0 N615… 391 ## 2 2008 7.00 2.00 3.00 1132 1135 2049 2005 DL 80.0 N684… 377 ## 3 2008 7.00 2.00 3.00 1638 1640 1922 1940 DL 81.0 N750… 344 ## 4 2008 7.00 2.00 3.00 1611 1440 1912 1802 DL 86.0 N984… 181 ## 5 2008 7.00 2.00 3.00 800 800 1129 1120 DL 87.0 N960… 209 ## 6 2008 7.00 2.00 3.00 626 630 1434 1455 DL 88.0 N374… 308 ## # ... with 17 more variables: crselapsedtime &lt;dbl&gt;, airtime &lt;dbl&gt;, ## # arrdelay &lt;dbl&gt;, depdelay &lt;dbl&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, ## # distance &lt;dbl&gt;, taxiin &lt;dbl&gt;, taxiout &lt;dbl&gt;, cancelled &lt;dbl&gt;, ## # cancellationcode &lt;chr&gt;, diverted &lt;dbl&gt;, carrierdelay &lt;dbl&gt;, ## # weatherdelay &lt;dbl&gt;, nasdelay &lt;dbl&gt;, securitydelay &lt;dbl&gt;, ## # lateaircraftdelay &lt;dbl&gt; Use the base query to figure the number of flights for that carrier no_flights &lt;- base_dashboard %&gt;% tally() %&gt;% pull() no_flights ## integer64 ## [1] 451931 In the app, replace the 100 number with no_flights and re-run the app # Goes from this: output$total &lt;- renderValueBox(valueBox(100, subtitle = &quot;Flights&quot;)) # To this: output$total &lt;- renderValueBox(valueBox(no_flights, subtitle = &quot;Flights&quot;)) Create a table with the month name and the number of flights for that month and that carrier monthly_flights &lt;- base_dashboard %&gt;% group_by(month) %&gt;% tally() %&gt;% collect() %&gt;% mutate(monthname = month.name[month], n = as.integer(n)) %&gt;% arrange(month) %&gt;% select(monthname, n) head(monthly_flights) ## # A tibble: 6 x 2 ## monthname n ## &lt;chr&gt; &lt;int&gt; ## 1 January 38256 ## 2 February 36275 ## 3 March 39829 ## 4 April 37049 ## 5 May 36349 ## 6 June 37844 In the app, replace head(mtcars) with monthly_flights and re-run the app # Goes from this: output$monthly &lt;- renderTable(head(mtcars)) # To this: output$monthly &lt;- renderTable(monthly_flights) 6.4 Integrate the input "]
]
