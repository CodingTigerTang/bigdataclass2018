[
["index.html", "Big Data with R - Exercise book", " Big Data with R - Exercise book Learn how to use R with Hive, SQL Server, Oracle and other scalable external data sources along with Big Data clusters in this two-day workshop. We will cover how to connect, retrieve schema information, upload data, and explore data outside of R. For databases, we will focus on the dplyr, DBI and odbc packages. These packages enable us to use the same dplyr verbs inside R but are translated and sent as SQL queries. For Big Data clusters, we will also learn how to use the sparklyr package to run models inside Spark and return the results to R. We will review recommendations for connection settings, security best practices and deployment options. Throughout the workshop, we will take advantage of the new data connections available with the RStudio IDE. "],
["access-a-database.html", "1 Access a database 1.1 Connect to a database 1.2 Explore the database using the RStudio IDE 1.3 List drivers and DSNs 1.4 Connect to a database using code 1.5 Connect to a database without a DSN 1.6 Secure credentials in a file 1.7 Use the OS credential store", " 1 Access a database 1.1 Connect to a database The simpliest way to connect to a database. More complex examples will be examined later in the class. Click on the Connections tab Click on the New Connection button Select Postgres Dev Click OK 1.2 Explore the database using the RStudio IDE Becoming familiar with the new interface for databases inside the RStudio IDE Expand the datawarehouse schema Expand the airport table Click on the table icon to the right of the airport table (Optional) Expand and explore the other tables Click on the disconnect icon to close the connection 1.3 List drivers and DSNs Learn how to use the odbc package to get DB info from your machine To get a list of drivers available in the server library(odbc) odbcListDrivers()[1:2] ## name attribute ## 1 PostgreSQL ANSI Description ## 2 PostgreSQL ANSI Driver ## 3 PostgreSQL ANSI Setup ## 4 PostgreSQL ANSI Debug ## 5 PostgreSQL ANSI CommLog ## 6 PostgreSQL ANSI UsageCount ## 7 PostgreSQL Unicode Description ## 8 PostgreSQL Unicode Driver ## 9 PostgreSQL Unicode Setup ## 10 PostgreSQL Unicode Debug ## 11 PostgreSQL Unicode CommLog ## 12 PostgreSQL Unicode UsageCount ## 13 AmazonRedshift Driver ## 14 Hive Driver ## 15 Impala Driver ## 16 Oracle Driver ## 17 PostgreSQL Driver ## 18 Salesforce Driver ## 19 SQLServer Driver ## 20 Teradata Driver To see a list of DSNs available in the server odbcListDataSources() ## name description ## 1 Postgres Dev PostgreSQL ## 2 Postgres Prod PostgreSQL 1.4 Connect to a database using code Use the odbc package along with DBI to open a connection to a database Run the following code to connect library(DBI) con &lt;- dbConnect(odbc::odbc(), &quot;Postgres Dev&quot;) Use dbListTables() to retrieve a list of tables dbListTables(con) ## [1] &quot;airport&quot; &quot;carrier&quot; &quot;flight&quot; Use dbGetQuery() to run a quick query View(odbc::dbGetQuery(con, &quot;SELECT * FROM datawarehouse.flight LIMIT 1000&quot;)) Disconnect from the database dbDisconnect(con) 1.5 Connect to a database without a DSN A more complex way of connecting to a database, using best practices: http://db.rstudio.com/best-practices/managing-credentials/#prompt-for-credentials Use the following code to start a new connection that does not use the pre-defined DSN con &lt;- dbConnect( odbc::odbc(), Driver = &quot;PostgreSQL&quot;, Server = &quot;localhost&quot;, UID = rstudioapi::askForPassword(&quot;Database user&quot;), PWD = rstudioapi::askForPassword(&quot;Database password&quot;), Port = 5432, Database = &quot;postgres&quot; ) When prompted, type in rstudio_dev for the user, and dev_user as the password 1.6 Secure credentials in a file *Credentials can be saved in a YAML file and then read using the config package: http://db.rstudio.com/best-practices/managing-credentials/#stored-in-a-file-with-config* Open and explore the config.yml file available in your working directory Use the config package to connect to the database dw &lt;- config::get(&quot;datawarehouse-dev&quot;) con &lt;- DBI::dbConnect(odbc::odbc(), Driver = dw$driver, Server = dw$server, UID = dw$uid, PWD = dw$pwd, Port = dw$port, Database = dw$database ) 1.7 Use the OS credential store The keyring package can be used to store the database credentials at the OS level [Pending] "],
["data-transformation.html", "2 Data transformation 2.1 Create a table variable 2.2 Basic aggregation 2.3 Under the hood A.4 Appendix A - Solutions", " 2 Data transformation 2.1 Create a table variable Basics to how to point a variable in R to a table or view inside the database (Optional) Open a connection to the database if itâ€™s currently closed con &lt;- DBI::dbConnect(odbc::odbc(), &quot;Postgres Dev&quot;) Load the dplyr library library(dplyr) Use the tbl() and in_schema() functions to create a reference to a table tbl(con, in_schema(&quot;datawarehouse&quot;, &quot;airport&quot;)) ## # Source: table&lt;datawarehouse.airport&gt; [?? x 2] ## # Database: PostgreSQL 9.3.20[rstudio_dev@localhost/postgres] ## airport airportname ## &lt;chr&gt; &lt;chr&gt; ## 1 01A Afognak Lake, AK: Afognak Lake Airport ## 2 03A Granite Mountain, AK: Bear Creek Mining Strip ## 3 04A Lik, AK: Lik Mining Camp ## 4 05A Little Squaw, AK: Little Squaw Airport ## 5 06A Kizhuyak, AK: Kizhuyak Bay ## 6 07A Klawock, AK: Klawock Seaplane Base ## 7 08A Elizabeth Island, AK: Elizabeth Island Airport ## 8 09A Homer, AK: Augustin Island ## 9 1B1 Hudson, NY: Columbia County ## 10 1G4 Peach Springs, AZ: Grand Canyon West ## # ... with more rows Load the reference, not the table data, into a variable airports &lt;- tbl(con, in_schema(&quot;datawarehouse&quot;, &quot;airport&quot;)) Call the variable to see preview the data in the table airports ## # Source: table&lt;datawarehouse.airport&gt; [?? x 2] ## # Database: PostgreSQL 9.3.20[rstudio_dev@localhost/postgres] ## airport airportname ## &lt;chr&gt; &lt;chr&gt; ## 1 01A Afognak Lake, AK: Afognak Lake Airport ## 2 03A Granite Mountain, AK: Bear Creek Mining Strip ## 3 04A Lik, AK: Lik Mining Camp ## 4 05A Little Squaw, AK: Little Squaw Airport ## 5 06A Kizhuyak, AK: Kizhuyak Bay ## 6 07A Klawock, AK: Klawock Seaplane Base ## 7 08A Elizabeth Island, AK: Elizabeth Island Airport ## 8 09A Homer, AK: Augustin Island ## 9 1B1 Hudson, NY: Columbia County ## 10 1G4 Peach Springs, AZ: Grand Canyon West ## # ... with more rows Set up the pointers to the other of the tables flights &lt;- tbl(con, in_schema(&quot;datawarehouse&quot;, &quot;flight&quot;)) carriers &lt;- tbl(con, in_schema(&quot;datawarehouse&quot;, &quot;carrier&quot;)) 2.2 Basic aggregation A couple of dplyr commands that run in-database How many records are in the airport table? carriers %&gt;% tally() ## # Source: lazy query [?? x 1] ## # Database: PostgreSQL 9.3.20[rstudio_dev@localhost/postgres] ## n ## &lt;S3: integer64&gt; ## 1 1702 What is the average character length of the airport codes? How many characters is the longest and the shortest airport name? airports %&gt;% summarise(avg_airport_length = mean(length(airport)), max_airport_name = max(length(airportname)), min_airport_name = min(length(airportname)), total_records = n()) ## # Source: lazy query [?? x 4] ## # Database: PostgreSQL 9.3.20[rstudio_dev@localhost/postgres] ## avg_airport_length max_airport_name min_airport_name total_records ## &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;S3: integer64&gt; ## 1 3 81 17 6454 Additional exercises: How many records are in the carrier table? How many characters is the longest carriername? 2.3 Under the hood Use show_query() to preview the SQL statement that will be sent to the database* SQL statement that actually runs when we ran airports as a command show_query(airports) ## &lt;SQL&gt; ## SELECT * ## FROM datawarehouse.airport Easily view the resulting query by adding show_query() in another piped command carriers %&gt;% tally() %&gt;% show_query() ## &lt;SQL&gt; ## SELECT count(*) AS &quot;n&quot; ## FROM datawarehouse.carrier Run the same for last exercise in the previous section airports %&gt;% summarise(avg_airport_length = mean(length(airport)), max_airport_name = max(length(airportname)), min_airport_name = min(length(airportname)), total_records = n()) %&gt;% show_query() ## &lt;SQL&gt; ## SELECT AVG(LENGTH(&quot;airport&quot;)) AS &quot;avg_airport_length&quot;, MAX(LENGTH(&quot;airportname&quot;)) AS &quot;max_airport_name&quot;, MIN(LENGTH(&quot;airportname&quot;)) AS &quot;min_airport_name&quot;, count(*) AS &quot;total_records&quot; ## FROM datawarehouse.airport A.4 Appendix A - Solutions A.4.1 Unit 2 How many records are in the carrier table? carriers %&gt;% tally() How many characters is the longest carriername? carriers %&gt;% summarise(max(length(carriername))) "]
]
